spring:
  task:
    execution:
      pool:
        max-size: 2
        core-size: 2
        queue-capacity: 5
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
          jwk-set-uri: ${JWK_SET_URI}
      client:
        provider:
          keycloak:
            authorization-uri: ${KEYCLOAK_AUTH_URI}
            issuer-uri: ${ISSUER_URI}
            token-uri: ${KEYCLOAK_TOKEN_URI}
            jwk-set-uri: ${JWK_SET_URI}
        registration:
          keycloak:
            provider: keycloak
            client-id: ${REG_KEYCLOAK_CLIENT_ID}
            client-secret: ${REG_KEYCLOAK_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseScheme}://{baseHost}{basePort}{basePath}/login/oauth2/code/keycloak"
            scope:
              - openid
              - profile
              - email
keycloak:
  server-url: ${KEYCLOAK_SERVER_URL}
  realm: ${KEYCLOAK_REALM}
  client-id: ${KEYCLOAK_CLIENT_ID}
  client-secret: ${KEYCLOAK_CLIENT_SECRET}
server:
  compression:
    enabled: true
    mime-types: text/plain
    min-response-size: 1KB
  forward-headers-strategy: framework
  port: 8082
springdoc:
  swagger-ui:
    operations-sorter: method
    tags-sorter: alpha
    oauth:
      client-id: ${REG_KEYCLOAK_CLIENT_ID}
      client-secret: ${REG_KEYCLOAK_CLIENT_SECRET}
      scopes: openid profile email


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.request]": true
